{"version":3,"sources":["webpack:///(webpack)/buildin/global.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/meta/meta-sender/meta-sender.component.css","webpack:///./src/app/meta/meta-sender/meta-sender.component.html","webpack:///./src/app/meta/meta-sender/meta-sender.component.ts","webpack:///./src/app/meta/meta.module.ts","webpack:///./src/app/meta/rcc-dao/rcc-dao-b.component.css","webpack:///./src/app/meta/rcc-dao/rcc-dao-b.component.html","webpack:///./src/app/meta/rcc-dao/rcc-dao-b.component.ts","webpack:///./src/app/meta/rcc/rcc.component.css","webpack:///./src/app/meta/rcc/rcc.component.html","webpack:///./src/app/meta/rcc/rcc.component.ts","webpack:///./src/app/rccDao/add-associated/add-associated.component.css","webpack:///./src/app/rccDao/add-associated/add-associated.component.html","webpack:///./src/app/rccDao/add-associated/add-associated.component.ts","webpack:///./src/app/rccDao/ask/ask.component.css","webpack:///./src/app/rccDao/ask/ask.component.html","webpack:///./src/app/rccDao/ask/ask.component.ts","webpack:///./src/app/rccDao/rcc/rcc.component.css","webpack:///./src/app/rccDao/rcc/rcc.component.html","webpack:///./src/app/rccDao/rcc/rcc.component.ts","webpack:///./src/app/rccDao/rccDao.module.ts","webpack:///./src/app/rccDao/rccDao/rccDao.component.css","webpack:///./src/app/rccDao/rccDao/rccDao.component.html","webpack:///./src/app/rccDao/rccDao/rccDao.component.ts","webpack:///./src/app/util/rcc.service.ts","webpack:///./src/app/util/rccDao.service.ts","webpack:///./src/app/util/util.module.ts","webpack:///./src/app/util/web3.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///util (ignored)","webpack:///util (ignored)?e61c","webpack:///buffer (ignored)","webpack:///crypto (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span>Angular Truffle Box</span>\\n\\n  <span class=\\\"example-spacer\\\"></span>\\n  <div fxShow=\\\"true\\\" fxHide.lt-md=\\\"true\\\">    \\n\\n    <a routerLink=\\\"/meta\\\" mat-button>Meta</a>\\n    <a routerLink=\\\"/rcc\\\" mat-button>Rcc</a>\\n    <a routerLink=\\\"/rccDaoB\\\" mat-button>RccDaoB</a>\\n    <a routerLink=\\\"/rccDao\\\" mat-button>RccDao</a>\\n\\n  </div>\\n\\n</mat-toolbar>\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material';\n\n\n\nimport { Routes, RouterModule } from '@angular/router';\nimport { MetaSenderComponent } from './meta/meta-sender/meta-sender.component';\nimport { RccComponent } from './meta/rcc/rcc.component';\nimport { RccDaoBComponent } from './meta/rcc-dao/rcc-dao-b.component';\n\nimport { RccDaoComponent } from './rccDao/rccDao/rccDao.component';\n\nimport { RccDaoModule } from './rccDao/rccDao.module';\n\nimport { AppComponent } from './app.component';\nimport { MetaModule } from './meta/meta.module';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatToolbarModule\n} from '@angular/material';\n\nconst routes: Routes = [\n  { path: 'meta', component: MetaSenderComponent },\n  { path: 'rcc', component: RccComponent },\n  { path: 'rccDaoB', component: RccDaoBComponent },\n  { path: 'rccDao', component: RccDaoComponent },\n  { path: '', redirectTo: '/meta', pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    RouterModule.forRoot(routes),\n    BrowserAnimationsModule,\n    CommonModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatToolbarModule,\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    MetaModule,\n    MatMenuModule,\n    MatTableModule,\n    RccDaoModule  \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".address-field {\\n  width: 400px;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWV0YS9tZXRhLXNlbmRlci9tZXRhLXNlbmRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtDQUNkIiwiZmlsZSI6InNyYy9hcHAvbWV0YS9tZXRhLXNlbmRlci9tZXRhLXNlbmRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFkZHJlc3MtZmllbGQge1xuICB3aWR0aDogNDAwcHg7XG59XG5cbiJdfQ== */\"","module.exports = \"<mat-card>\\n  <mat-card-header>Balance</mat-card-header>\\n  <mat-card-content>\\n    <mat-form-field id=\\\"address-selector\\\" class=\\\"address-field\\\">\\n      <mat-select name=\\\"account\\\" (selectionChange)=\\\"refreshBalance()\\\" [(value)]=\\\"model.account\\\" placeholder=\\\"Address\\\">\\n        <mat-option *ngFor=\\\"let account of accounts\\\" [value]=\\\"account\\\">{{account}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <p>You have <span id=\\\"balance\\\">{{model.balance}}</span> META</p>\\n  </mat-card-content>\\n</mat-card>\\n\\n<mat-card>\\n  <mat-card-header>Send MetaCoin</mat-card-header>\\n  <mat-card-content>\\n    <mat-form-field>\\n      <input type=\\\"text\\\" matInput id=\\\"amount\\\" placeholder=\\\"Amount\\\" (change)=\\\"setAmount($event)\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"address-field\\\">\\n      <input type=\\\"text\\\" matInput id=\\\"receiver\\\" placeholder=\\\"Receiver Address\\\" (change)=\\\"setReceiver($event)\\\">\\n    </mat-form-field>\\n    <button mat-button id=\\\"send\\\" (click)=\\\"sendCoin()\\\">Send MetaCoin</button>\\n  </mat-card-content>\\n</mat-card>\\n\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Web3Service} from '../../util/web3.service';\nimport { MatSnackBar } from '@angular/material';\n\ndeclare let require: any;\nconst metacoin_artifacts = require('../../../../../truffle/build/contracts/MetaCoin.json');\n\n@Component({\n  selector: 'app-meta-sender',\n  templateUrl: './meta-sender.component.html',\n  styleUrls: ['./meta-sender.component.css']\n})\nexport class MetaSenderComponent implements OnInit {\n  accounts: string[];\n  MetaCoin: any;\n\n  model = {\n    amount: 5,\n    receiver: '',\n    balance: 0,\n    account: ''\n  };\n\n  status = '';\n\n  constructor(private web3Service: Web3Service, private matSnackBar: MatSnackBar) {\n    console.log('Constructor: ' + web3Service);\n  }\n\n  ngOnInit(): void {    \n\n    console.log('OnInit: ' + this.web3Service);\n    console.log(this);\n    this.watchAccount();\n    \n    this.web3Service.getToContract(metacoin_artifacts)\n      .then((MetaCoinAbstraction) => {\n        this.MetaCoin = MetaCoinAbstraction;        \n        this.MetaCoin.deployed().then(deployed => {\n          console.log(deployed);\n          deployed.Transfer({}, (err, ev) => {\n            console.log('Transfer event came in, refreshing balance');\n            this.refreshBalance();\n          });\n        });\n\n      });\n  }\n\n  watchAccount() {\n    this.web3Service.accountsObservable.subscribe((accounts) => {\n      this.accounts = accounts;\n      this.model.account = accounts[0];\n      this.refreshBalance();\n    });\n  }\n\n  setStatus(status) {\n    this.matSnackBar.open(status, null, {duration: 3000});\n  }\n\n  async sendCoin() {\n    if (!this.MetaCoin) {\n      this.setStatus('Metacoin is not loaded, unable to send transaction');\n      return;\n    }\n\n    const amount = this.model.amount;\n    const receiver = this.model.receiver;\n\n    console.log('Sending coins' + amount + ' to ' + receiver);\n\n    this.setStatus('Initiating transaction... (please wait)');\n    try {\n      const deployedMetaCoin = await this.MetaCoin.deployed();\n      const transaction = await deployedMetaCoin.sendCoin.sendTransaction(receiver, amount, {from: this.model.account});\n\n      if (!transaction) {\n        this.setStatus('Transaction failed!');\n      } else {\n        this.setStatus('Transaction complete!');\n      }\n    } catch (e) {\n      console.log(e);\n      this.setStatus('Error sending coin; see log.');\n    }\n  }\n\n  async refreshBalance() {\n    console.log('Refreshing balance');\n\n    try {      \n      const deployedMetaCoin = await this.MetaCoin.deployed();\n      console.log(deployedMetaCoin);\n      console.log('Account', this.model.account);\n      \n      const metaCoinBalance = await deployedMetaCoin.getBalance.call(this.model.account);      \n      console.log('Found balance: ' + metaCoinBalance);\n      this.model.balance = metaCoinBalance;\n    } catch (e) {\n      console.log(e);\n      this.setStatus('Error getting balance; see log.');\n    }\n  }\n\n  setAmount(e) {\n    console.log('Setting amount: ' + e.target.value);\n    this.model.amount = e.target.value;\n  }\n\n  setReceiver(e) {\n    console.log('Setting receiver: ' + e.target.value);\n    this.model.receiver = e.target.value;\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MetaSenderComponent} from './meta-sender/meta-sender.component';\nimport {UtilModule} from '../util/util.module';\nimport {RouterModule} from '@angular/router';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatOptionModule,\n  MatSelectModule, MatSnackBarModule\n} from '@angular/material';\nimport {MatExpansionModule} from '@angular/material'\nimport { MatTableModule } from '@angular/material';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { RccComponent } from './rcc/rcc.component';\nimport { RccDaoBComponent } from './rcc-dao/rcc-dao-b.component';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    CommonModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    RouterModule,\n    UtilModule,\n    MatExpansionModule,\n    MatTableModule\n  ],\n  declarations: [MetaSenderComponent, RccComponent, RccDaoBComponent],\n  exports: [MetaSenderComponent]\n})\nexport class MetaModule {\n}\n","module.exports = \".address-field {\\n    width: 400px;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWV0YS9yY2MtZGFvL3JjYy1kYW8tYi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtHQUNkIiwiZmlsZSI6InNyYy9hcHAvbWV0YS9yY2MtZGFvL3JjYy1kYW8tYi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFkZHJlc3MtZmllbGQge1xuICAgIHdpZHRoOiA0MDBweDtcbiAgfSJdfQ== */\"","module.exports = \"<mat-card>\\n  <button mat-button id=\\\"send\\\" (click)=\\\"init()\\\">Init</button>\\n  <mat-card-header>Default Account</mat-card-header>\\n  <mat-card-content>\\n    <mat-form-field id=\\\"address-selector\\\" class=\\\"address-field\\\">\\n      <mat-select name=\\\"account\\\" (selectionChange)=\\\"refreshDefaultAccountBalance()\\\" [(value)]=\\\"default_account.account\\\" placeholder=\\\"Address\\\">\\n        <mat-option *ngFor=\\\"let account of web3Service.accounts\\\" [value]=\\\"account\\\">{{account}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <p>You have <span id=\\\"balance\\\">{{default_account.balance}}</span> RCC</p>\\n  </mat-card-content>\\n</mat-card>\\n\\n<mat-expansion-panel>\\n  <mat-expansion-panel-header>\\n    <mat-panel-title>\\n        New Associated\\n    </mat-panel-title>\\n    <mat-panel-description>\\n        Alta de un nuevo asociado\\n    </mat-panel-description>\\n  </mat-expansion-panel-header>\\n\\n  <mat-card>\\n    <mat-card-header>Send newAssociated Transaction</mat-card-header>\\n    <mat-card-content>        \\n      <mat-form-field class=\\\"address-field\\\">\\n        <input type=\\\"text\\\" matInput id=\\\"new_associated_address\\\" placeholder=\\\"Associated Address\\\" (change)=\\\"setNewAssociatedAddress($event)\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"address-field\\\">\\n          <input type=\\\"text\\\" matInput id=\\\"new_associated_name\\\" placeholder=\\\"Associated Name\\\" (change)=\\\"setNewAssociatedName($event)\\\">\\n        </mat-form-field>\\n        <mat-form-field class=\\\"address-field\\\">\\n            <input type=\\\"text\\\" matInput id=\\\"new_associated_ref\\\" placeholder=\\\"Associated Ref\\\" (change)=\\\"setNewAssociatedRef($event)\\\">\\n          </mat-form-field>\\n      <button mat-button id=\\\"send\\\" (click)=\\\"newAssociated()\\\">New Associated</button>\\n    </mat-card-content>\\n  </mat-card>\\n\\n</mat-expansion-panel>\\n\\n<mat-expansion-panel>\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n          Associatted \\n      </mat-panel-title>\\n      <mat-panel-description>\\n          Get Associatted\\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n  \\n    <mat-card>\\n      <mat-card-header>Get Associatted</mat-card-header>\\n      <mat-card-content>\\n        <mat-select name=\\\"associated_address\\\" [(value)]=\\\"associated.address\\\" placeholder=\\\"Address\\\">\\n          <mat-option *ngFor=\\\"let account of accounts\\\" [value]=\\\"account\\\">{{account}}</mat-option>\\n        </mat-select>\\n        <button mat-button id=\\\"getBalance\\\" (click)=\\\"getAssociated()\\\">Get Associatted</button>\\n        <p>Associated Address<span id=\\\"associated_address\\\">{{associated.address}}</span></p>\\n        <p>Associated Name<span id=\\\"associated_name\\\">{{associated.name}}</span></p>\\n        <p>Associated Ref<span id=\\\"associated_ref\\\">{{associated.ref}}</span></p>\\n      </mat-card-content>\\n    </mat-card>\\n  \\n  </mat-expansion-panel>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { Web3Service } from '../../util/web3.service';\nimport { MatSnackBar } from '@angular/material';\n\n\ndeclare let require: any;\nconst rccDao_truffle_contract = require('../../../../../truffle/build/contracts/RccDao.json');\nconst rcc_truffle_contract = require('../../../../../truffle/build/contracts/RCC.json');\n\nexport interface IAssociated {\n  address: string;\n  name: string;\n  ref: string;\n}\n\n@Component({\n  selector: 'app-rcc-dao-b',\n  templateUrl: './rcc-dao-b.component.html',\n  styleUrls: ['./rcc-dao-b.component.css']\n})\nexport class RccDaoBComponent implements OnInit {\n  \n  associatedList: string[];  \n\n  rcc_contract: any;\n  deployedRcc: any;\n\n  rccDao_contract: any;\n  deployedRccDao: any;\n\n  default_account = {\n    amount: 0,\n    receiver: '',\n    balance: 0,\n    account: ''\n  };\n\n  new_associated = {\n    address: '',\n    name: '',\n    ref: '',    \n  };\n\n  associated = {\n    address: '',\n    name: '',\n    ref: '',    \n  };\n\n  displayedColumns: string[] = ['address', 'name', 'ref'];  \n\n  constructor(private web3Service: Web3Service, private matSnackBar: MatSnackBar) {    \n   }\n\n  ngOnInit() {\n    console.log('OnInit: ' + this.web3Service);\n    this.refreshAccount().then(() =>{\n      console.log('Default account: ' + this.default_account.account);        \n      this.refreshDefaultAccountBalance();  \n    })\n\n    this.web3Service.getToContract(rccDao_truffle_contract)\n      .then((RccDaoAbstraction) => {\n        this.rccDao_contract = RccDaoAbstraction;\n        this.rccDao_contract.deployed().then(deployed => {\n          this.deployedRccDao = deployed;          \n        });\n      });      \n\n    this.web3Service.getToContract(rcc_truffle_contract)\n      .then((RccAbstraction) => {\n        this.rcc_contract = RccAbstraction;\n        this.rcc_contract.deployed().then(deployed => {\n          this.deployedRcc = deployed;\n          console.log(deployed);                       \n        });\n      });      \n    }\n\n    async refreshAccount() {       \n      if (!this.web3Service.accounts){        \n        this.web3Service.accountsObservable.subscribe((accounts) => {              \n          this.default_account.account = accounts[0];                \n        });     \n      }else{              \n        this.default_account.account = this.web3Service.accounts[0];  \n      }\n    }\n\n    async init() {\n      try {     \n        const transaction = await this.deployedRcc.addMinter.sendTransaction(this.deployedRccDao.address, {from: this.default_account.account});  \n        if (!transaction) {\n          this.setStatus('Transaction failed!');\n          console.log('Transaction failed!');\n        } else {\n          this.setStatus('Transaction complete!');\n          console.log('Transaction complete!');          \n        }\n      } catch (e) {\n        console.log(e);\n        this.setStatus('Error sending new Associated; see log.');\n      }\n    }\n\n    async refreshDefaultAccountBalance() {\n      console.log('Refreshing balance');\n      try {\n        console.log('Account', this.default_account.account);\n\n        const rccBalance = await this.deployedRcc.balanceOf.call(this.default_account.account);\n        this.default_account.balance = rccBalance;\n\n        console.log('Found balance: ' + rccBalance);\n        \n      } catch (e) {\n        console.log(e);\n        this.setStatus('Error getting balance; see log.');\n      }\n    }\n\n    async newAssociated() {\n      if (!this.rccDao_contract) {\n        alert(\"El contrato rccDao no está desplegado\")\n        this.setStatus('Metacoin is not loaded, unable to send transaction');\n        return;\n      }\n  \n      console.log('Sending transaction of new associated: ' + this.new_associated.address);\n  \n      this.setStatus('Initiating transaction... (please wait)');\n      console.log('Initiating transaction... (please wait)');\n      try {\n        const transaction = await this.deployedRccDao.newAssociated.sendTransaction(this.new_associated.address, this.new_associated.name, this.new_associated.ref, true, true, {from: this.default_account.account});\n  \n        if (!transaction) {\n          this.setStatus('Transaction failed!');\n          console.log('Transaction failed!');\n        } else {\n          this.setStatus('Transaction complete!');\n          console.log('Transaction complete!');          \n        }\n      } catch (e) {\n        console.log(e);\n        this.setStatus('Error sending new Associated; see log.');\n      }\n    }\n\n    setNewAssociatedAddress(e) {\n      console.log('Setting receiver: ' + e.target.value);\n      this.new_associated.address = e.target.value;\n    }\n\n    setNewAssociatedName(e) {\n      console.log('Setting receiver: ' + e.target.value);\n      this.new_associated.name = e.target.value;\n    }\n\n    setNewAssociatedRef(e) {\n      console.log('Setting receiver: ' + e.target.value);\n      this.new_associated.ref = e.target.value;\n    }\n\n    async getAssociatedList() {\n      if (!this.rccDao_contract) {\n        alert(\"El contrato rccDao no está desplegado\")\n        this.setStatus('Metacoin is not loaded, unable to send transaction');\n        return;\n      }\n  \n      console.log('Sending transaction of getAssociatedList: ');\n  \n      this.setStatus('Initiating transaction... (please wait)');\n      console.log('Initiating transaction... (please wait)');\n      try {\n        const deployedRccDao = await this.rccDao_contract.deployed();\n        this.associatedList = await deployedRccDao.getAssociatedList.call();      \n        console.log(this.associatedList);\n        \n      } catch (e) {\n        console.log(e);\n        this.setStatus('Error sending new Associated; see log.');\n      }\n    }\n\n    async getAssociated() {\n      if (!this.rccDao_contract) {\n        alert(\"El contrato rccDao no está desplegado\")\n        this.setStatus('Metacoin is not loaded, unable to call transaction');\n        return;\n      }\n  \n      console.log('Sending transaction of getAssociated: ');\n  \n      this.setStatus('Initiating transaction... (please wait)');\n      console.log('Initiating transaction... (please wait)');\n      try {\n        const deployedRccDao = await this.rccDao_contract.deployed();\n        const associated = await deployedRccDao.getAssociated.call(this.associated.address);      \n        console.log(associated);        \n        this.associated.name = associated.name;\n        this.associated.ref = associated.ref;\n        \n      } catch (e) {\n        console.log(e);\n        this.setStatus('Error sending new Associated; see log.');\n      }\n    }\n\n    /*\n    async getAssociatedTable() {   \n      this.associatedTable = new Array<IAssociated>();\n      await this.getAssociatedList();\n      this.associatedList.forEach(async associated_address => {    \n        const associated = await this.getAssociated(associated_address);       \n        this.dataSource.data.push({\"address\": associated_address, \"name\": associated.name, \"ref\": associated.ref} as IAssociated);\n        \n        //this.associatedTable.push({\"address\": associated_address, \"name\": associated.name, \"ref\": associated.ref});\n        alert(JSON.stringify(this.dataSource.data))\n      });      \n    }\n    */\n\n    setStatus(status) {\n      this.matSnackBar.open(status, null, {duration: 3000});\n    }\n}\n","module.exports = \".address-field {\\n    width: 400px;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWV0YS9yY2MvcmNjLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0dBQ2QiLCJmaWxlIjoic3JjL2FwcC9tZXRhL3JjYy9yY2MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hZGRyZXNzLWZpZWxkIHtcbiAgICB3aWR0aDogNDAwcHg7XG4gIH0iXX0= */\"","module.exports = \"\\n<mat-card>\\n  <mat-card-header>Default Account</mat-card-header>\\n  <mat-card-content>\\n    <mat-form-field id=\\\"address-selector\\\" class=\\\"address-field\\\">\\n      <mat-select name=\\\"account\\\" (selectionChange)=\\\"refreshBalance()\\\" [(value)]=\\\"default_account.account\\\" placeholder=\\\"Address\\\">\\n        <mat-option *ngFor=\\\"let account of accounts\\\" [value]=\\\"account\\\">{{account}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <p>You have <span id=\\\"balance\\\">{{default_account.balance}}</span> RCC</p>\\n  </mat-card-content>\\n</mat-card>\\n\\n\\n<mat-expansion-panel>\\n  <mat-expansion-panel-header>\\n    <mat-panel-title>\\n        Envío Externo\\n    </mat-panel-title>\\n    <mat-panel-description>\\n        Envio de RCC a una dirección Externa\\n    </mat-panel-description>\\n  </mat-expansion-panel-header>\\n\\n  <mat-card>\\n    <mat-card-header>Send RCC Coin</mat-card-header>\\n    <mat-card-content>\\n      <mat-form-field>\\n        <input type=\\\"text\\\" matInput id=\\\"amount\\\" placeholder=\\\"Amount\\\" (change)=\\\"setAmount($event)\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"address-field\\\">\\n        <input type=\\\"text\\\" matInput id=\\\"receiver\\\" placeholder=\\\"Receiver Address\\\" (change)=\\\"setReceiver($event)\\\">\\n      </mat-form-field>\\n      <button mat-button id=\\\"send\\\" (click)=\\\"sendRCC()\\\">Send RCC Coin</button>\\n    </mat-card-content>\\n  </mat-card>\\n\\n</mat-expansion-panel>\\n\\n<mat-expansion-panel>\\n  <mat-expansion-panel-header>\\n    <mat-panel-title>\\n        Envío entre Cuentas\\n    </mat-panel-title>\\n    <mat-panel-description>\\n        Envio de RCC a una cuenta propia\\n    </mat-panel-description>\\n  </mat-expansion-panel-header>\\n\\n  <mat-card>\\n    <mat-card-header>Send RCC Coin to Wallet Account</mat-card-header>\\n    <mat-card-content>\\n      <mat-form-field>\\n        <input type=\\\"text\\\" matInput id=\\\"rcc_amount\\\" placeholder=\\\"Amount\\\" (change)=\\\"setRccAmount($event)\\\">\\n      </mat-form-field>\\n      <mat-form-field id=\\\"address-selector\\\" class=\\\"address-field\\\">\\n          <mat-select name=\\\"account\\\" (selectionChange)=\\\"refreshRccBalance()\\\" [(value)]=\\\"rcc_account.account\\\" placeholder=\\\"Address\\\">\\n            <mat-option *ngFor=\\\"let account of accounts\\\" [value]=\\\"account\\\">{{account}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      <button mat-button id=\\\"send\\\" (click)=\\\"sendRCCAccount()\\\">Send RCC Coin</button>\\n      <p>The Balance of {{rcc_account.account}} is <span id=\\\"balance_rcc_account\\\">{{rcc_account.balance}}</span> RCC</p>\\n    </mat-card-content>\\n  </mat-card>\\n\\n</mat-expansion-panel>\\n\\n<mat-expansion-panel>\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n          Mint\\n      </mat-panel-title>\\n      <mat-panel-description>\\n          Genera RCC para una cuenta propia a través del método Mint\\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n  \\n    <mat-card>\\n      <mat-card-header>Generate RCC Coin to Wallet Account</mat-card-header>\\n      <mat-card-content>\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput id=\\\"mint_amount\\\" placeholder=\\\"Amount\\\" (change)=\\\"setMintAmount($event)\\\">\\n        </mat-form-field>\\n        <mat-form-field id=\\\"address-selector\\\" class=\\\"address-field\\\">\\n            <mat-select name=\\\"mint_account\\\" (selectionChange)=\\\"refreshMintBalance()\\\" [(value)]=\\\"mint_account.account\\\" placeholder=\\\"Address\\\">\\n              <mat-option *ngFor=\\\"let account of accounts\\\" [value]=\\\"account\\\">{{account}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        <button mat-button id=\\\"send\\\" (click)=\\\"sendMintAccount()\\\">Send RCC Coin</button>\\n        <p>The Balance of {{rcc_account.account}} is <span id=\\\"balance_mint_account\\\">{{mint_account.balance}}</span> RCC</p>\\n      </mat-card-content>\\n    </mat-card>\\n  \\n  </mat-expansion-panel>\\n\\n<mat-expansion-panel>\\n  <mat-expansion-panel-header>\\n    <mat-panel-title>\\n        Saldo\\n    </mat-panel-title>\\n    <mat-panel-description>\\n        Comprobación de Saldo\\n    </mat-panel-description>\\n  </mat-expansion-panel-header>\\n\\n  <mat-card>\\n    <mat-card-header>Comprobación de Saldo</mat-card-header>\\n    <mat-card-content>\\n      <mat-form-field class=\\\"address-field\\\">\\n        <input type=\\\"text\\\" matInput id=\\\"balance_address\\\" placeholder=\\\"Address\\\" (change)=\\\"setAddressBalance($event)\\\">\\n      </mat-form-field>\\n      <button mat-button id=\\\"getBalance\\\" (click)=\\\"getBalance()\\\">Get Balance</button>\\n      <p>The Balance is <span id=\\\"balance_account\\\">{{balance_account.balance}}</span> RCC</p>\\n    </mat-card-content>\\n  </mat-card>\\n\\n</mat-expansion-panel>\\n\\n\\n<mat-expansion-panel>\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n          Add Minter\\n      </mat-panel-title>\\n      <mat-panel-description>\\n          Crea un nuevo Minter\\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n  \\n    <mat-card>\\n      <mat-card-header>Add Minter</mat-card-header>\\n      <mat-card-content>        \\n        <mat-form-field id=\\\"address-selector\\\" class=\\\"address-field\\\">\\n          <input type=\\\"text\\\" matInput id=\\\"minter_account\\\" placeholder=\\\"Address\\\" (change)=\\\"setMinterAccount($event)\\\">            \\n        </mat-form-field>\\n        <button mat-button id=\\\"send\\\" (click)=\\\"sendAddMinter()\\\">Add Minter</button>        \\n      </mat-card-content>\\n    </mat-card>\\n  \\n  </mat-expansion-panel>\\n\\n\\n    \\n\"","import { Component, OnInit } from '@angular/core';\nimport { Web3Service } from '../../util/web3.service';\nimport { MatSnackBar } from '@angular/material';\n\ndeclare let require: any;\nconst rcc_contract = require('../../../../../truffle/build/contracts/RCC.json');\n\n@Component({\n  selector: 'app-rcc',\n  templateUrl: './rcc.component.html',\n  styleUrls: ['./rcc.component.css']\n})\nexport class RccComponent implements OnInit {\n\n  accounts: string[];\n  rcc_contract: any;\n\n  default_account = {\n    amount: 0,\n    receiver: '',\n    balance: 0,\n    account: ''\n  };\n\n  rcc_account = {\n    amount: 0,    \n    balance: 0,\n    account: ''\n  };\n\n\n  mint_account = {\n    amount: 0,    \n    balance: 0,\n    account: ''\n  };\n\n  minter_account = {\n    amount: 0,    \n    balance: 0,\n    account: ''\n  };\n\n  balance_account = {\n    amount: 0,\n    balance: 0,\n    account: ''\n  };\n\n  constructor(private web3Service: Web3Service, private matSnackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    console.log('OnInit: ' + this.web3Service);\n    console.log(this);\n    this.refreshAccount();\n    this.web3Service.getToContract(rcc_contract)\n      .then((RccAbstraction) => {\n        this.rcc_contract = RccAbstraction;\n        this.rcc_contract.deployed().then(deployed => {\n          console.log(deployed);\n          /*\n          deployed.Transfer({}, (err, ev) => {\n            console.log('Transfer event came in, refreshing balance');\n            this.refreshBalance();\n          });\n          */\n        });\n\n      });\n  }\n\n  async refreshAccount() {       \n    if (!this.web3Service.accounts){        \n      this.web3Service.accountsObservable.subscribe((accounts) => {          \n        this.accounts = accounts;\n        this.default_account.account = this.accounts[0];      \n        console.log('Default account: ' + this.default_account.account);        \n        this.refreshDefaultAccountBalance();  \n      });     \n    }else{\n      this.accounts = this.web3Service.accounts;\n      this.default_account.account = this.accounts[0];  \n      console.log('Default account: ' + this.default_account.account);      \n      this.refreshDefaultAccountBalance(); \n    }\n  }\n\n  async refreshDefaultAccountBalance() {\n    console.log('Refreshing balance');\n    try {\n      const deployedRcc = await this.rcc_contract.deployed();\n      console.log(deployedRcc);\n      console.log('Account', this.default_account.account);\n      const rccBalance = await deployedRcc.balanceOf.call(this.default_account.account);\n      console.log('Found balance: ' + rccBalance);\n      this.default_account.balance = rccBalance;\n    } catch (e) {\n      console.log(e);\n      this.setStatus('Error getting balance; see log.');\n    }\n  }\n\n  setAmount(e) {\n    console.log('Setting amount: ' + e.target.value);\n    this.default_account.amount = e.target.value;\n  }\n\n  setReceiver(e) {\n    console.log('Setting receiver: ' + e.target.value);\n    this.default_account.receiver = e.target.value;\n  }  \n\n  async sendRCC() {\n    if (!this.rcc_contract) {\n      alert(\"El contrato rcc no está desplegado\")\n      this.setStatus('Metacoin is not loaded, unable to send transaction');\n      return;\n    }\n\n    const amount = this.default_account.amount;\n    const receiver = this.default_account.receiver;\n\n    console.log('Sending coins' + amount + ' to ' + receiver);\n\n    this.setStatus('Initiating transaction... (please wait)');\n    console.log('Initiating transaction... (please wait)');\n    try {\n      const deployedRcc = await this.rcc_contract.deployed();\n      const transaction = await deployedRcc.transfer.sendTransaction(receiver, amount, {from: this.default_account.account});\n\n      if (!transaction) {\n        this.setStatus('Transaction failed!');\n        console.log('Transaction failed!');\n      } else {\n        this.setStatus('Transaction complete!');\n        console.log('Transaction complete!');\n        this.refreshDefaultAccountBalance();\n      }\n    } catch (e) {\n      console.log(e);\n      this.setStatus('Error sending coin; see log.');\n    }\n  }\n\n\n  setAddressBalance(e) {\n    console.log('Setting receiver: ' + e.target.value);\n    this.balance_account.account = e.target.value;\n  }\n\n  async getBalance() {\n    if (!this.rcc_contract) {\n      alert(\"El contrato rcc no está desplegado\")\n      this.setStatus('Metacoin is not loaded, unable to send transaction');\n      return;\n    }\n\n    const amount = this.default_account.amount;\n    const balance_account = this.balance_account.account;\n\n    console.log('Getting coins of ' + balance_account);\n\n    this.setStatus('Initiating transaction... (please wait)');\n    console.log('Initiating transaction... (please wait)');\n    try {\n      const deployedRcc = await this.rcc_contract.deployed();\n      const rccBalance = await deployedRcc.balanceOf.call(this.balance_account.account);\n      console.log('Found balance: ' + rccBalance);\n      this.balance_account.balance = rccBalance;\n\n     \n    } catch (e) {\n      console.log(e);\n      this.setStatus('Error sending coin; see log.');\n    }\n  }\n\n\n\n  async sendRCCAccount() {\n    if (!this.rcc_contract) {\n      alert(\"El contrato rcc no está desplegado\")\n      this.setStatus('Metacoin is not loaded, unable to send transaction');\n      return;\n    }\n\n    const amount = this.rcc_account.amount;\n    const receiver = this.rcc_account.account;\n\n    console.log('Sending coins' + amount + ' to ' + receiver);\n\n    this.setStatus('Initiating transaction... (please wait)');\n    console.log('Initiating transaction... (please wait)');\n    try {\n      const deployedRcc = await this.rcc_contract.deployed();\n      const transaction = await deployedRcc.transfer.sendTransaction(receiver, amount, {from: this.default_account.account});\n\n      if (!transaction) {\n        this.setStatus('Transaction failed!');\n        console.log('Transaction failed!');\n      } else {\n        this.setStatus('Transaction complete!');\n        console.log('Transaction complete!');\n        this.refreshDefaultAccountBalance();\n        this.refreshRccBalance();\n      }\n    } catch (e) {\n      console.log(e);\n      this.setStatus('Error sending coin; see log.');\n    }\n  }\n\n  setRccAmount(e) {\n    console.log('Setting amount: ' + e.target.value);\n    this.rcc_account.amount = e.target.value;\n  }\n\n  async refreshRccBalance() {\n    console.log('Refreshing balance');\n    try {\n      const deployedRcc = await this.rcc_contract.deployed();\n      console.log(deployedRcc);\n      console.log('Account', this.rcc_account.account);\n      const rccBalance = await deployedRcc.balanceOf.call(this.rcc_account.account);\n      console.log('Found balance: ' + rccBalance);\n      this.rcc_account.balance = rccBalance;\n    } catch (e) {\n      console.log(e);\n      this.setStatus('Error getting balance; see log.');\n    }\n  }\n\n  async sendMintAccount() {\n    if (!this.rcc_contract) {\n      alert(\"El contrato rcc no está desplegado\")\n      this.setStatus('Metacoin is not loaded, unable to send transaction');\n      return;\n    }\n\n    const amount = this.mint_account.amount;\n    const receiver = this.mint_account.account;\n\n    console.log('Sending coins' + amount + ' to ' + receiver);\n\n    this.setStatus('Initiating transaction... (please wait)');\n    console.log('Initiating transaction... (please wait)');\n    try {\n      const deployedRcc = await this.rcc_contract.deployed();\n      const transaction = await deployedRcc.mint.sendTransaction(receiver, amount, {from: this.default_account.account});\n\n      if (!transaction) {\n        this.setStatus('Transaction failed!');\n        console.log('Transaction failed!');\n      } else {\n        this.setStatus('Transaction complete!');\n        console.log('Transaction complete!');\n        this.refreshDefaultAccountBalance();\n        this.refreshMintBalance();\n      }\n    } catch (e) {\n      console.log(e);\n      this.setStatus('Error sending coin; see log.');\n    }\n  }\n\n  setMintAmount(e) {\n    console.log('Setting amount: ' + e.target.value);\n    this.mint_account.amount = e.target.value;\n  }\n\n  async refreshMintBalance() {\n    console.log('Refreshing balance');\n    try {\n      const deployedRcc = await this.rcc_contract.deployed();\n      console.log(deployedRcc);\n      console.log('Account', this.mint_account.account);\n      const rccBalance = await deployedRcc.balanceOf.call(this.mint_account.account);\n      console.log('Found balance: ' + rccBalance);\n      this.mint_account.balance = rccBalance;\n    } catch (e) {\n      console.log(e);\n      this.setStatus('Error getting balance; see log.');\n    }\n  }\n\n  async sendAddMinter() {\n    if (!this.rcc_contract) {\n      alert(\"El contrato rcc no está desplegado\")\n      this.setStatus('Metacoin is not loaded, unable to send transaction');\n      return;\n    }\n    \n    const receiver = this.minter_account.account;\n\n\n    this.setStatus('Initiating transaction... (please wait)');\n    console.log('Initiating transaction... (please wait)');\n    try {\n      const deployedRcc = await this.rcc_contract.deployed();\n      const transaction = await deployedRcc.addMinter.sendTransaction(receiver, {from: this.default_account.account});\n\n      if (!transaction) {\n        this.setStatus('Transaction failed!');\n        console.log('Transaction failed!');\n      } else {\n        this.setStatus('Transaction complete!');\n        console.log('Transaction complete!');\n      }\n    } catch (e) {\n      console.log(e);\n      this.setStatus('Error sending coin; see log.');\n    }\n  }\n\n  setMinterAccount(e) {\n    console.log('Setting receiver: ' + e.target.value);\n    this.minter_account.account = e.target.value;\n  }\n\n  setStatus(status) {\n    this.matSnackBar.open(status, null, {duration: 3000});\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JjY0Rhby9hZGQtYXNzb2NpYXRlZC9hZGQtYXNzb2NpYXRlZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"card border-fujitsu w-100\\\">\\n  <span  class=\\\"card-header-fujitsu bg-fujitsu\\\" >New Associated\\n      <button type=\\\"button\\\" class=\\\"close card-close-fujitsu\\\"  [attr.aria-label]=\\\"'Close'\\\" (click)=\\\"closeModal()\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>            \\n  </span>  \\n  <div class=\\\"card-body card-body-fujitsu\\\">\\n    <form class=\\\"form\\\" [formGroup]=\\\"addAssociated\\\" >          \\n      <div class=\\\"input-group mb-2\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\">Address</span>\\n        </div>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Address\\\" formControlName=\\\"address\\\" required autofocus [(ngModel)]=\\\"associated.address\\\" >\\n      </div>\\n      <div class=\\\"input-group mb-2\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\">Name</span>\\n        </div>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\" required [(ngModel)]=\\\"associated.name\\\" >\\n      </div>\\n      <div class=\\\"input-group mb-2\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\">Ref</span>\\n        </div>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Ref\\\" formControlName=\\\"ref\\\" required [(ngModel)]=\\\"associated.ref\\\" >\\n      </div>      \\n      <div class=\\\"btn-group\\\" style = \\\"float:right\\\">\\n        <button  *ngIf=\\\"mode=='add'\\\" type=\\\"submit\\\" [disabled]=\\\"!addAssociated.valid\\\" class=\\\"btn btn-mg btn-outline-secondary btn-fujitsu mr-1 pull-right\\\" (click)=\\\"add()\\\">Add</button>        \\n        <button aria-label=\\\"Cancel\\\" type=\\\"submit\\\" class=\\\"btn btn-mg btn-outline-secondary btn-fujitsu pull-right\\\" (click)=\\\"closeModal()\\\">Cancel</button>      \\n      </div>\\n    </form>\\n  </div>\\n</div> \\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\n\nimport { RccDaoService } from '../../util/rccDao.service';\n\n@Component({\n  selector: 'app-add-associated-review',\n  templateUrl: './add-associated.component.html',\n  styleUrls: ['./add-associated.component.css']\n})\nexport class AddAssociatedComponent implements OnInit {\n\n  constructor(public modalService: NgbModal, \n    public activeModal: NgbActiveModal,\n    public rccDaoService: RccDaoService,\n    private matSnackBar: MatSnackBar) { }    \n      \n  @Input() public associated: any;\n  @Input() public mode: string;\n\n  addAssociated: FormGroup;\n\n  ngOnInit() {  \n    this.addAssociated = new FormGroup(\n      {\n        address: new FormControl(''),\n        name: new FormControl(''),\n        ref: new FormControl(''),        \n      }\n    )\n  }\n \n  add(){\n    this.rccDaoService.newAssociated(this.associated.address, this.associated.name, this.associated.ref)\n    .then(\n      result => {                          \n        if (result == \"OK\"){                                \n          this.activeModal.close('OK');\n          this.setStatus(\"Se ha incluido un nuevo asociado\");\n        }\n        else{\n          this.activeModal.close('OK');\n          this.setStatus(\"No se ha podido añadir un nuevo asociado\");\n        }\n      },\n      err => {\n        console.log(err)      \n        this.activeModal.close('OK');\n        this.setStatus(\"No se ha podido añadir un nuevo asociado. Error: \" + JSON.stringify(err));\n      }\n    )\n  }  \n\n  closeModal() {\n    this.activeModal.close('KO');\n  } \n\n  setStatus(status) {\n    this.matSnackBar.open(status, null, {duration: 3000});\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JjY0Rhby9hc2svYXNrLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card border-fujitsu w-100\\\">\\n  <span  class=\\\"card-header-fujitsu bg-fujitsu\\\" >Ask for Supply\\n      <button type=\\\"button\\\" class=\\\"close card-close-fujitsu\\\"  [attr.aria-label]=\\\"'Close'\\\" (click)=\\\"closeModal()\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>            \\n  </span>  \\n  <div class=\\\"card-body card-body-fujitsu\\\">\\n    <form class=\\\"form\\\" [formGroup]=\\\"askForm\\\" >          \\n      <div class=\\\"input-group mb-2\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\">Associated Address</span>\\n        </div>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Address Associated\\\" formControlName=\\\"address\\\" disabled [(ngModel)]=\\\"ask.address\\\" >        \\n      </div>\\n      <div class=\\\"input-group mb-2\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\">Amount</span>\\n        </div>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Amount\\\" formControlName=\\\"amount\\\" required [(ngModel)]=\\\"ask.amount\\\" >\\n      </div> \\n      <div class=\\\"input-group mb-2\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\">Message</span>\\n        </div>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Message\\\" formControlName=\\\"message\\\" required [(ngModel)]=\\\"ask.message\\\" >\\n      </div>      \\n      <div class=\\\"btn-group\\\" style = \\\"float:right\\\">\\n        <button  type=\\\"submit\\\" [disabled]=\\\"!askForm.valid\\\" class=\\\"btn btn-mg btn-outline-secondary btn-fujitsu mr-1 pull-right\\\" (click)=\\\"ask()\\\">Ask</button>        \\n        <button aria-label=\\\"Cancel\\\" type=\\\"submit\\\" class=\\\"btn btn-mg btn-outline-secondary btn-fujitsu pull-right\\\" (click)=\\\"closeModal()\\\">Cancel</button>      \\n      </div>\\n    </form>\\n  </div>\\n</div> \\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\n\nimport { RccDaoService } from '../../util/rccDao.service';\n\n@Component({\n  selector: 'app-ask-review',\n  templateUrl: './ask.component.html',\n  styleUrls: ['./ask.component.css']\n})\nexport class AskComponent implements OnInit {\n\n  constructor(public modalService: NgbModal, \n    public activeModal: NgbActiveModal,\n    public rccDaoService: RccDaoService,\n    private matSnackBar: MatSnackBar) { }    \n      \n  @Input() public associated: any;\n  @Input() public mode: string;\n\n  askForm: FormGroup;\n\n  ngOnInit() {  \n    this.askForm = new FormGroup(\n      {\n        address: new FormControl(''),\n        amount: new FormControl(''),\n        message: new FormControl(''),        \n      }\n    )\n  }\n \n  ask(){\n    alert(1)\n    this.rccDaoService.ask(this.associated.address, this.associated.amount, this.associated.message)\n    .then(\n      result => {                          \n        if (result == \"OK\"){                                \n          this.activeModal.close('OK');\n          this.setStatus(\"Se ha realizado una petición de Token\");\n        }\n      },\n      err => console.log(err)      \n    )\n  }  \n\n  closeModal() {\n    this.activeModal.close('KO');\n  } \n\n  setStatus(status) {\n    this.matSnackBar.open(status, null, {duration: 3000});\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JjY0Rhby9yY2MvcmNjLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card border-fujitsu w-100\\\">\\n  <span  class=\\\"card-header-fujitsu bg-fujitsu\\\" >RCC Transaction Panel\\n      <button type=\\\"button\\\" class=\\\"close card-close-fujitsu\\\"  [attr.aria-label]=\\\"'Close'\\\" (click)=\\\"closeModal()\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>            \\n  </span>  \\n  <div class=\\\"card-body card-body-fujitsu\\\">\\n    <form class=\\\"form\\\" [formGroup]=\\\"rccForm\\\" >          \\n      <div *ngIf=\\\"mode=='send'\\\" class=\\\"input-group mb-2\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\">Address</span>\\n        </div>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Address\\\" formControlName=\\\"address\\\" required autofocus [(ngModel)]=\\\"rcc.address\\\" >\\n      </div>\\n      <div *ngIf=\\\"mode=='send_internal'\\\" class=\\\"input-group mb-2\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\">Wallet Address</span>\\n        </div>\\n        <select class=\\\"form-control\\\" formControlName=\\\"address_wallet\\\" [(ngModel)]=\\\"rcc.address\\\" >           \\n          <option *ngFor=\\\"let account of web3Service.accounts\\\" >{{account}}</option> \\n        </select> \\n      </div> \\n      <div *ngIf=\\\"mode=='minter'\\\" class=\\\"input-group mb-2\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\">Associated Address</span>\\n        </div>\\n        <select class=\\\"form-control\\\" formControlName=\\\"address_associated\\\" [(ngModel)]=\\\"rcc.address\\\" >           \\n          <option *ngFor=\\\"let account of rccDaoService.associatedList\\\" >{{account}}</option> \\n        </select> \\n      </div>      \\n      <div class=\\\"input-group mb-2\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\">Amount</span>\\n        </div>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Amount\\\" formControlName=\\\"amount\\\" required [(ngModel)]=\\\"rcc.amount\\\" >\\n      </div>            \\n      <div class=\\\"btn-group\\\" style = \\\"float:right\\\">\\n        <button  *ngIf=\\\"mode=='send' || mode=='send_internal'\\\" type=\\\"submit\\\" [disabled]=\\\"!rccForm.valid\\\" class=\\\"btn btn-mg btn-outline-secondary btn-fujitsu mr-1 pull-right\\\" (click)=\\\"send()\\\">Send</button>        \\n        <button  *ngIf=\\\"mode=='minter'\\\" type=\\\"submit\\\" [disabled]=\\\"!rccForm.valid\\\" class=\\\"btn btn-mg btn-outline-secondary btn-fujitsu mr-1 pull-right\\\" (click)=\\\"mint()\\\">Mint</button>        \\n        <button aria-label=\\\"Cancel\\\" type=\\\"submit\\\" class=\\\"btn btn-mg btn-outline-secondary btn-fujitsu pull-right\\\" (click)=\\\"closeModal()\\\">Cancel</button>      \\n      </div>\\n    </form>\\n  </div>\\n</div> \\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { RccDaoService } from '../../util/rccDao.service';\nimport { RccService } from '../../util/rcc.service';\nimport { Web3Service } from '../../util/web3.service';\n\n@Component({\n  selector: 'app-rcc-review',\n  templateUrl: './rcc.component.html',\n  styleUrls: ['./rcc.component.css']\n})\nexport class RccComponent implements OnInit {\n\n  constructor(public modalService: NgbModal, \n    public activeModal: NgbActiveModal,\n    public rccService: RccService,\n    public rccDaoService: RccDaoService,\n    private web3Service: Web3Service) { }    \n      \n  @Input() public rcc: any;\n  @Input() public mode: string;\n\n  rccForm: FormGroup;\n\n  ngOnInit() {        \n    this.rccForm = new FormGroup(\n      {\n        address: new FormControl(''),\n        address_wallet: new FormControl(''),\n        address_associated: new FormControl(''),\n        amount: new FormControl(''),\n      }\n    )\n    this.rccDaoService.getAssociatedList();\n  }\n \n  send(){    \n    this.rccService.sendRCC(this.rcc.address, this.rcc.amount)\n    .then(\n      result => {                          \n        if (result == \"OK\"){                                \n          this.activeModal.close('OK');\n        }\n      },\n      err => console.log(err)      \n    )\n  }  \n\n  mint(){    \n    this.rccService.mintRCC(this.rcc.address, this.rcc.amount)\n    .then(\n      result => {                          \n        if (result == \"OK\"){                                \n          this.activeModal.close('OK');\n        }\n      },\n      err => console.log(err)      \n    )\n  }  \n\n  closeModal() {\n    this.activeModal.close('KO');\n  } \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { RccDaoComponent } from './rccDao/rccDao.component';\nimport { AddAssociatedComponent } from './add-associated/add-associated.component';\nimport { RccComponent } from './rcc/rcc.component';\nimport { AskComponent } from './ask/ask.component';\n\n@NgModule({\n  declarations: [\n    RccDaoComponent,    \n    AddAssociatedComponent,\n    RccComponent,\n    AskComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,    \n    NgbModule \n  ],  \n  entryComponents: [    \n    AddAssociatedComponent,\n    RccComponent,\n    AskComponent\n  ],\n  exports: [\n    RccDaoComponent\n  ]  \n})\nexport class RccDaoModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JjY0Rhby9yY2NEYW8vcmNjRGFvLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row col-md-12 mt-2\\\"> \\n  <div class=\\\"card border-fujitsu w-100 ml-2 mt-4 mr-2\\\" style=\\\"max-width: 100%;\\\">\\n    <span class=\\\"card-header-fujitsu bg-fujitsu\\\">RCC Management\\n    </span>    \\n    <div class=\\\"card-body\\\" class=\\\"card-body-fujitsu\\\">  \\n      <form class=\\\"form-inline\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\">Account</span>\\n          </div>\\n          <select class=\\\"form-control\\\" autofocus [(ngModel)]=\\\"web3Service.default_account.account\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"web3Service.updateBalance()\\\" >\\n            <option *ngFor=\\\"let account of web3Service.accounts\\\" >{{account}}</option> \\n          </select> \\n        </div> \\n        <div class=\\\"input-group ml-2\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\">Balance</span>\\n          </div>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Amount\\\" disabled [(ngModel)]=\\\"web3Service.default_account.balance\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </div>              \\n        <div class=\\\"btn-group ml-4 mb-2 mt-2\\\" style = \\\"float:right\\\">\\n          <button  class=\\\"btn btn-mg btn-outline-secondary btn-fujitsu mr-1 pull-right\\\" (click)=\\\"rcc('','send')\\\">Send</button>        \\n          <button  class=\\\"btn btn-mg btn-outline-secondary btn-fujitsu mr-1 pull-right\\\" (click)=\\\"rcc('','send_internal')\\\">Send (Wallet)</button>\\n          <button  class=\\\"btn btn-mg btn-outline-secondary btn-fujitsu mr-1 pull-right\\\" (click)=\\\"rcc('','minter')\\\">Mint</button>\\n        </div>\\n      </form>\\n    </div>    \\n  </div>\\n</div>\\n\\n<div class=\\\"row col-md-12\\\"> \\n  <div class=\\\"card border-fujitsu w-100 ml-2 mt-2 mr-2\\\" style=\\\"max-width: 100%;\\\">\\n    <span class=\\\"card-header-fujitsu bg-fujitsu\\\">Associated List\\n        <button class=\\\"btn btn-link text-white\\\" (click)=\\\"addAssociated()\\\" style = \\\"float: right\\\">Add</button>                  \\n    </span>\\n    <div class=\\\"card-body\\\">  \\n      <table class=\\\"table fujitsu-table\\\">\\n        <thead>\\n        <tr>        \\n          <th scope=\\\"col\\\">Address</th>\\n          <th scope=\\\"col\\\">Balance</th>\\n          <th scope=\\\"col\\\">Name</th>\\n          <th scope=\\\"col\\\">Ref</th>\\n          <th scope=\\\"col\\\">Enabled</th>\\n          <th scope=\\\"col\\\">Minter</th>          \\n          <th scope=\\\"col\\\">Ask</th>          \\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr [class.active]=\\\"i == selectedRow\\\" *ngFor=\\\"let associated of rccDaoService.associatedTable; index as i\\\" (click)=\\\"select(i, associated)\\\">                \\n          <td style=\\\"vertical-align: middle;\\\" class=\\\"text-link\\\" (click)=\\\"rcc(associated.address, 'minter')\\\">{{ associated.address }}</td>\\n          <td style=\\\"vertical-align: middle;\\\">{{ associated.balance }}</td>\\n          <td style=\\\"vertical-align: middle;\\\">{{ associated.name }}</td>\\n          <td style=\\\"vertical-align: middle;\\\">{{ associated.ref }}</td>\\n          <td style=\\\"vertical-align: middle;\\\">{{ associated.enabled }}</td>\\n          <td style=\\\"vertical-align: middle;\\\">{{ associated.minter }}</td>\\n          <td>\\n              <button class=\\\"btn btn-mg btn-outline-secondary btn-fujitsu\\\" (click)=\\\"ask(associated.address)\\\">Ask</button>      \\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AddAssociatedComponent } from '../add-associated/add-associated.component';\nimport { RccComponent } from '../rcc/rcc.component';\nimport { AskComponent } from '../ask/ask.component';\n\nimport { RccDaoService } from '../../util/rccDao.service';\nimport { Web3Service } from '../../util/web3.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-rccDao',\n  templateUrl: './rccDao.component.html',\n  styleUrls: ['./rccDao.component.css']\n})\nexport class RccDaoComponent implements OnInit {\n    \n  selectedRow: number;\n  associated_selected: any;\n  \n  isAlertSuccessDisplayed:boolean = true;\n  isAlertFailDisplayed:boolean = true;\n  alert_success:string;\n  alert_fail:string;\n  \n\n  constructor(public rccDaoService: RccDaoService, \n    private web3Service: Web3Service,       \n    public modalService: NgbModal,\n    private matSnackBar: MatSnackBar) { }    \n\n  ngOnInit() {\n      this.updateWeb3();      \n  }  \n\n  async updateWeb3(){\n    if (!this.web3Service.ready){\n      const delay = new Promise(resolve => setTimeout(resolve, 100));\n      await delay;\n      this.ngOnInit();\n    }\n    else{\n      this.rccDaoService.getAssociatedTable(); \n      this.web3Service.updateBalance();\n      this.rccDaoService.activate();\n    }\n  }\n\n  public addAssociated(){              \n    const modalRef = this.modalService.open(AddAssociatedComponent,{ size: 'lg', backdrop: 'static'});                 \n    modalRef.componentInstance.mode = \"add\";    \n    modalRef.componentInstance.associated = {};    \n    modalRef.result.then((result) => {       \n      if (result == 'OK'){            \n        this.rccDaoService.getAssociatedTable();\n        this.selectedRow = -1;   \n      }\n    }).catch((error) =>{      \n    });     \n  }\n\n  public rcc(address:string, mode:string){        \n    const modalRef = this.modalService.open(RccComponent,{ size: 'lg', backdrop: 'static'});\n    modalRef.componentInstance.mode = mode;   \n    modalRef.componentInstance.rcc = {address:address, ammount:0};     \n    modalRef.result.then((result) => {             \n      if (result == 'OK'){                               \n      }\n    }).catch((error) =>{      \n    });                      \n  }\n\n  public ask(address:string){        \n    const modalRef = this.modalService.open(AskComponent,{ size: 'lg', backdrop: 'static'});\n    modalRef.componentInstance.ask = {address:address, ammount:0, message:\"\"};     \n    modalRef.result.then((result) => {             \n      if (result == 'OK'){                               \n      }\n    }).catch((error) =>{      \n    });                      \n  }\n\n\n  select(index, associated) {                \n    if (this.selectedRow == index){\n      this.selectedRow = -1;      \n    }\n    else{\n      this.selectedRow = index;\n      this.associated_selected = associated;\n    }    \n  }\n\n  setStatus(status) {\n    this.matSnackBar.open(status, null, {duration: 3000});\n  }\n}","import {Injectable} from '@angular/core';\nimport contract from 'truffle-contract';\nimport {Subject} from 'rxjs';\ndeclare let require: any;\nimport { Web3Service } from '../util/web3.service';\nimport { ok } from 'assert';\n\n\ndeclare let window: any;\n\n@Injectable({\n  // we declare that this service should be created\n  // by the root application injector.\n  providedIn: 'root',\n})\nexport class RccService {\n  \n  public associatedList: string[];\n  public associatedTable: Array<any>;\n  \n  constructor(private web3Service: Web3Service) {    \n  }\n\n  public async sendRCC(address:string, amount:number) {\n    let result:string;\n    console.log('Initiating transaction... (please wait)');\n    try {      \n      const transaction = await this.web3Service.deployedRcc.transfer.sendTransaction(address, amount, {from: this.web3Service.default_account.account});\n      if (!transaction) {        \n        console.log('Transaction failed!');\n        result = 'KO';\n      } else {       \n        console.log('Transaction complete!');          \n        result = 'OK';\n      }\n\n    } catch (e) {\n      console.log(e);    \n      result = 'KO';    \n      return result;  \n    }\n  }\n\n  public async mintRCC(address:string, amount:number) {\n            \n    let result:string;\n    console.log('Initiating transaction... (please wait)');\n    try {      \n      const transaction = await this.web3Service.deployedRcc.mint.sendTransaction(address, amount, {from: this.web3Service.default_account.account});\n      if (!transaction) {        \n        console.log('Transaction failed!');\n        result = 'KO';\n      } else {       \n        console.log('Transaction complete!');          \n        result = 'OK';\n      }\n\n    } catch (e) {\n      console.log(e);    \n      result = 'KO';    \n      return result;  \n    }\n  }\n\n  async getBalance(address:string) {\n       \n    console.log('Initiating transaction... (please wait)');\n    try {      \n      const rccBalance = await this.web3Service.deployedRcc.balanceOf.call(address);\n      console.log('Found balance: ' + rccBalance);\n      return rccBalance;     \n    } catch (e) {\n      console.log(e);      \n    }\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport contract from 'truffle-contract';\nimport {Subject} from 'rxjs';\ndeclare let require: any;\nimport { Web3Service } from '../util/web3.service';\nimport { ok } from 'assert';\n\n\ndeclare let window: any;\n\n@Injectable({\n  // we declare that this service should be created\n  // by the root application injector.\n  providedIn: 'root',\n})\nexport class RccDaoService {\n  \n  public associatedList: string[];\n  public associatedTable: Array<any>;\n  \n  constructor(private web3Service: Web3Service) {    \n  }\n\n  public async getAssociatedList() {    \n    this.associatedList = new Array();\n    console.log('Initiating transaction... (please wait)');\n    try {\n      this.associatedList = await this.web3Service.deployedRccDao.getAssociatedList.call();            \n      console.log(this.associatedList);       \n    } catch (e) {\n      console.log(e);      \n    }\n  }\n\n  public async getAssociated(address) {\n        \n    let associated:any;\n    console.log('Initiating transaction... (please wait)');\n    try {      \n      associated = await this.web3Service.deployedRccDao.getAssociated.call(address);      \n      console.log(associated);        \n      associated.address = address;\n      associated.balance = await this.web3Service.deployedRcc.balanceOf.call(address);\n      associated.name = associated.name;\n      associated.ref = associated.ref;      \n      associated.enabled = associated.enabled;      \n      associated.minter = associated.minter;      \n    } catch (e) {\n      console.log(e);      \n    }\n    return associated;\n  }\n\n  public async getAssociatedTable() {       \n    try {\n      this.associatedTable = new Array<any>();\n      this.getAssociatedList().then( () =>{        \n        this.associatedList.forEach(associated_address => {\n          this.getAssociated(associated_address).then((associated) =>{\n            this.associatedTable.push(associated)\n          })\n        });\n      })          \n    } catch (e) {\n      console.log(e);      \n    }    \n  }\n\n  public async activate() {   \n    let result:string;\n    console.log('Initiating transaction... (please wait)');\n    try {            \n      const transaction = await this.web3Service.deployedRcc.activate.sendTransaction(this.web3Service.deployedRccDao.address, {from: this.web3Service.default_account.account});\n      if (!transaction) {        \n        console.log('Transaction failed!');\n        result = 'KO';\n      } else {       \n        console.log('Transaction complete!');          \n        result = 'OK';\n      }\n      return result;\n\n    } catch (e) {\n      console.log(e); \n      result = 'KO';    \n      return result;\n    }    \n  }\n\n  public async newAssociated(address, name, ref) {   \n    let result:string;\n    console.log('Initiating transaction... (please wait)');\n    try {      \n      const transaction = await this.web3Service.deployedRccDao.newAssociated.sendTransaction(address, name, ref, true, true, {from: this.web3Service.default_account.account});\n      if (!transaction) {        \n        console.log('Transaction failed!');\n        result = 'KO';\n      } else {       \n        console.log('Transaction complete!');          \n        result = 'OK';\n      }\n      return result;\n\n    } catch (e) {\n      console.log(e); \n      result = 'KO';    \n      return result;\n    }\n    \n  }\n\n  public async ask(address: string, amount: number, message: string) {   \n    let result:string;\n    console.log('Initiating transaction... (please wait)');\n    try {      \n      const transaction = await this.web3Service.deployedRccDao.ask.sendTransaction(1,address, amount, message, {from: this.web3Service.default_account.account});\n      if (!transaction) {        \n        console.log('Transaction failed!');\n        result = 'KO';\n      } else {       \n        console.log('Transaction complete!');          \n        result = 'OK';\n      }\n      return result;\n\n    } catch (e) {\n      console.log(e); \n      result = 'KO';    \n      return result;\n    }\n    \n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {Web3Service} from './web3.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    Web3Service\n  ],\n  declarations: []\n})\nexport class UtilModule {\n}\n","import {Injectable} from '@angular/core';\nimport contract from 'truffle-contract';\nimport {Subject} from 'rxjs';\ndeclare let require: any;\nconst Web3 = require('web3');\n\n\ndeclare let window: any;\n\nconst rccDao_truffle_contract = require('../../../../truffle/build/contracts/RccDao.json');\nconst rcc_truffle_contract = require('../../../../truffle/build/contracts/RCC.json');\n\n@Injectable({\n  // we declare that this service should be created\n  // by the root application injector.\n  providedIn: 'root',\n})\nexport class Web3Service {\n\n  private web3: any;\n  public accounts: string[];\n  public ready = false;\n\n  rcc_contract: any;\n  deployedRcc: any;\n\n  rccDao_contract: any;\n  deployedRccDao: any;\n\n  default_account = {\n    amount: 0,\n    receiver: '',\n    balance: 0,\n    account: ''\n  };\n\n  public accountsObservable = new Subject<string[]>();\n\n  constructor() {\n    window.addEventListener('load', (event) => {\n      this.bootstrapWeb3();\n      this.getDeployedContract();\n    });\n  }\n\n  public bootstrapWeb3() {\n    // Checking if Web3 has been injected by the browser (Mist/MetaMask)\n    if (typeof window.web3 == 'undefined') {\n      // Use Mist/MetaMask's provider\n      this.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      console.log('No web3? You should consider trying MetaMask!');\n\n      // Hack to provide backwards compatibility for Truffle, which uses web3js 0.20.x\n      Web3.providers.HttpProvider.prototype.sendAsync = Web3.providers.HttpProvider.prototype.send;\n      // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)\n      this.web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:7545'));\n    }\n    setInterval(() => this.refreshAccounts(), 500);\n  }\n\n  public async getToContract(truffle_contract) {\n    if (!this.web3) {\n      const delay = new Promise(resolve => setTimeout(resolve, 100));\n      await delay;\n      return await this.getToContract(truffle_contract);\n    }\n    const contractAbstraction = contract(truffle_contract);\n    contractAbstraction.setProvider(this.web3.currentProvider);\n    return contractAbstraction;\n  }\n\n  public async refreshAccounts() {\n    this.web3.eth.getAccounts((err, accs) => {\n      console.log('Refreshing accounts');\n      if (err != null) {\n        console.warn('There was an error fetching your accounts.');\n        return;\n      }\n\n      // Get the initial account balance so it can be displayed.\n      if (accs.length === 0) {\n        console.warn('Couldn\\'t get any accounts! Make sure your Ethereum client is configured correctly.');\n        return;\n      }\n\n      if (!this.accounts || this.accounts.length !== accs.length || this.accounts[0] !== accs[0]) {\n        console.log('Observed new accounts');\n\n        this.accountsObservable.next(accs);        \n        this.accounts = accs;\n        this.default_account.account= this.accounts[0];\n        this.updateBalance();\n      }\n\n      this.ready = true;\n    });\n  }\n\n  async updateBalance() {\n       \n    console.log('Initiating transaction... (please wait)');\n    try {            \n      const rccBalance = await this.deployedRcc.balanceOf.call(this.default_account.account);\n      console.log('Found balance: ' + rccBalance);\n      this.default_account.balance = rccBalance;     \n    } catch (e) {\n      console.log(e);      \n    }\n  }\n\n  public async getDeployedContract() {\n  \n\n    this.getToContract(rccDao_truffle_contract)\n      .then((RccDaoAbstraction) => {\n        this.rccDao_contract = RccDaoAbstraction;\n        this.rccDao_contract.deployed().then(deployed => {\n          this.deployedRccDao = deployed;          \n        });\n      });      \n\n    this.getToContract(rcc_truffle_contract)\n      .then((RccAbstraction) => {\n        this.rcc_contract = RccAbstraction;\n        this.rcc_contract.deployed().then(deployed => {\n          this.deployedRcc = deployed;\n          console.log(deployed);                       \n        });\n      }); \n    }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}